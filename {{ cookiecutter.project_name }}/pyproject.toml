[build-system]
requires = ["scikit-build-core>= 0.4.3", "nanobind>=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.rst"
license = { file = "LICENSE.txt" }
requires-python = ">=3.8"
authors = [
  { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
dependencies = []
classifiers = []
license = { text = "{{cookiecutter.open_source_license}}" }

[project.optional-dependencies]
docs = [
  "sphinx",
]


[project.urls]
Homepage = "{{cookiecutter.homepage_url}}"
Documentation = "{{cookiecutter.documentation_url}}"
Repository = "{{cookiecutter.github_url}}.git"
Issues = "{{cookiecutter.issue_tracker_url}}"
Changelog = "{{cookiecutter.github_url}}/blob/main/CHANGELOG.rst"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# Specify build type
cmake.build-type = "Release"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Optional: run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# skipp pypy and mulsllinux wheels
skip = ["pp*", "*musllinux*"]

# Only target 64 bit architectures
archs = ["auto64"]

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "S", # bandit
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = 100

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
